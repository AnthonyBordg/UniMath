(* Category generated by a preorder *)

Require Import UniMath.Foundations.Sets.
Require Import UniMath.Foundations.Propositions.
Require Import UniMath.CategoryTheory.Categories.
Local Open Scope cat.

Section po_category_def.
Context {X : UU}.
Context (PO : po X).

(* Precategory over a po *)
Definition po_precategory_ob_mor : precategory_ob_mor :=
    precategory_ob_mor_pair X (carrierofpo X PO).

Definition po_precategory_data : precategory_data :=
  precategory_data_pair (po_precategory_ob_mor)
                        (pr2 (pr2 PO)) (pr1 (pr2 PO)).


Lemma po_homsets_isaprop : ∏(a b : po_precategory_data),
                      isaprop (po_precategory_data ⟦a,b⟧).
Proof.
  intros.
  apply propproperty.
Defined.

Definition po_precategory_data_is_precategory :
  is_precategory po_precategory_data.
Proof.
  use mk_is_precategory; intros; apply po_homsets_isaprop.
Defined.

Definition po_precategory  : precategory :=
  tpair _ po_precategory_data po_precategory_data_is_precategory.

(* Category over po *)
Definition po_precategory_has_homsets : has_homsets po_precategory_ob_mor.
Proof.
  intros a b.
  apply hlevelntosn.
  apply po_homsets_isaprop.
Defined.

Definition po_category : category :=
   tpair _ po_precategory po_precategory_has_homsets.

End po_category_def.

Section poset_univalent_category_def.
(* A poset is a univalent category *)

Context (POS : Poset).

Definition poset_category : category :=
  po_category (popair (posetRelation POS) (pr1 (pr2 (pr2 POS)))).

Lemma poset_category_iso_is_eq {A B : poset_category} (isoAB : iso A B) :
  A = B.
Proof.
  apply (isantisymm_posetRelation POS).
  apply (morphism_from_iso poset_category A B isoAB).
  apply (inv_from_iso isoAB).
Defined.

Lemma poset_category_isweq {A B : poset_category} :
  isweq (λ p : A = B, idtoiso p).
Proof.
  use gradth.
  - apply poset_category_iso_is_eq.
  - intro eq.
    apply proofirrelevance.
    apply setproperty.
  - intro iso.
    use eq_iso.
    apply proofirrelevance.
    apply propproperty.
Defined.

Lemma poset_category_is_univalent : is_univalent poset_category.
  use mk_is_univalent.
  - intros a b.
    apply poset_category_isweq.
  - apply po_precategory_has_homsets.
Defined.

Definition poset_univalent_category : univalent_category :=
  mk_category poset_category poset_category_is_univalent.

End poset_univalent_category_def.
